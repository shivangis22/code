{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shivangi\\\\Downloads\\\\code-newbranch\\\\src\\\\Adminform.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport './styles/Adminform.css';\nimport axios from 'axios';\nimport imageCompression from 'browser-image-compression';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  maxSizeMB: 1,\n  useWebWorker: true\n};\n\nfunction Adminform() {\n  _s();\n\n  const [developerName, setDeveloperName] = useState('');\n  const [projectName, setProjectName] = useState('');\n  const [description, setDescription] = useState('');\n  const [repoUrl, setRepoUrl] = useState('');\n  const [demoUrl, setDemoUrl] = useState('');\n  const [documentationUrl, setDocumenationUrl] = useState('');\n  const [stack, setStack] = useState('');\n  const [tags, setTags] = useState([]);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n\n  function resetStates() {\n    setSelectedFiles([]);\n    setDeveloperName('');\n    setProjectName('');\n    setDescription('');\n    setRepoUrl('');\n    setDemoUrl('');\n    setTags([]);\n    setDocumenationUrl('');\n    setStack('');\n  }\n\n  function handleImageInput(event) {\n    const file = event.target.files[0];\n    const newSelectedFiles = [...selectedFiles, file];\n    setSelectedFiles(newSelectedFiles);\n  } //   const handleSubmitImage = async () => {\n  //     if (selectedFiles.length === 0) return null;\n  //     try{\n  //         // const imageFile = selectedFile\n  //         let images = []\n  //         selectedFiles.forEach(async (imageFile)=>{\n  //           const file = await imageCompression(imageFile, options)\n  //           const reader = new FileReader();\n  //           reader.readAsDataURL(file);\n  //           reader.onloadend = async() => {\n  //               // uploadImage(reader.result)\n  //             images.push(reader.result)\n  //           };\n  //           reader.onerror = () => {\n  //               console.log('some error happened')\n  //           };\n  //         });\n  //         console.log(images)\n  //         return images\n  //        }catch(err) {\n  //         console.log(err)\n  //         return null\n  //        }\n  // };\n\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    let user = {\n      developer_name: developerName,\n      project_name: projectName,\n      description: description,\n      repo_url: repoUrl,\n      demo_url: demoUrl,\n      documentation_url: documentationUrl,\n      main_stack: stack\n    };\n\n    try {\n      let images = [];\n\n      for (let i = 0; i < selectedFiles.length; i++) {\n        let imageFile = selectedFiles[i];\n        const file = await imageCompression(imageFile, options);\n\n        const uploadFileAsText = file => {\n          return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n\n            reader.onloadend = async () => {\n              resolve(reader.result);\n            };\n\n            reader.onerror = () => {\n              reject();\n            };\n          });\n        };\n\n        let res = await uploadFileAsText(file);\n        images.push(res);\n      }\n\n      let Tags = tags.split(' ');\n      console.log(Tags);\n      let result = await axios.post('https://code-crud.herokuapp.com/addproject', { ...user,\n        images: images,\n        tags: Tags\n      });\n      resetStates();\n      console.log(result);\n      alert('project added successfully');\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Input Project Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Project Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"name\",\n            value: projectName,\n            onChange: evt => {\n              setProjectName(evt.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Project Leader\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"leader\",\n            value: developerName,\n            onChange: evt => {\n              setDeveloperName(evt.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Project description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"description\",\n            value: description,\n            onChange: evt => {\n              setDescription(evt.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Image Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"fileInput\",\n            type: \"file\",\n            name: \"image\",\n            onChange: handleImageInput // value={fileInputState}\n            ,\n            className: \"form-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"fileInput\",\n            type: \"file\",\n            name: \"image\",\n            onChange: handleImageInput // value={fileInputState}\n            ,\n            className: \"form-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"fileInput\",\n            type: \"file\",\n            name: \"image\",\n            onChange: handleImageInput // value={fileInputState}\n            ,\n            className: \"form-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"fileInput\",\n            type: \"file\",\n            name: \"image\",\n            onChange: handleImageInput // value={fileInputState}\n            ,\n            className: \"form-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Repository Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"github\",\n            value: repoUrl,\n            onChange: evt => {\n              setRepoUrl(evt.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Demo Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"demolink\",\n            value: demoUrl,\n            onChange: evt => {\n              setDemoUrl(evt.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Documentation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"documentation\",\n            value: documentationUrl,\n            onChange: evt => {\n              setDocumenationUrl(evt.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Tech Stack\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"tech\",\n            value: stack,\n            onChange: evt => {\n              setStack(evt.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Tags\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"tags\",\n            value: tags,\n            onChange: evt => {\n              setTags(evt.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Adminform, \"mmxoxwOsX/MVicziyDQZyc5gxMM=\");\n\n_c = Adminform;\nexport default Adminform;\n\nvar _c;\n\n$RefreshReg$(_c, \"Adminform\");","map":{"version":3,"sources":["C:/Users/Shivangi/Downloads/code-newbranch/src/Adminform.js"],"names":["React","useState","axios","imageCompression","options","maxSizeMB","useWebWorker","Adminform","developerName","setDeveloperName","projectName","setProjectName","description","setDescription","repoUrl","setRepoUrl","demoUrl","setDemoUrl","documentationUrl","setDocumenationUrl","stack","setStack","tags","setTags","selectedFiles","setSelectedFiles","resetStates","handleImageInput","event","file","target","files","newSelectedFiles","handleSubmit","preventDefault","user","developer_name","project_name","repo_url","demo_url","documentation_url","main_stack","images","i","length","imageFile","uploadFileAsText","Promise","resolve","reject","reader","FileReader","readAsDataURL","onloadend","result","onerror","res","push","Tags","split","console","log","post","alert","err","evt","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\nimport './styles/Adminform.css';\nimport axios from 'axios';\nimport imageCompression from 'browser-image-compression';\n\nconst options = { \n  maxSizeMB: 1,        \n  useWebWorker: true,    \n}\n\nfunction Adminform() {\n \n  const [developerName, setDeveloperName] = useState('')\n  const [projectName, setProjectName] = useState('')\n  const [description, setDescription] = useState('')\n  const [repoUrl, setRepoUrl] = useState('')\n  const [demoUrl, setDemoUrl] = useState('')\n  const [documentationUrl, setDocumenationUrl] = useState('')\n  const [stack, setStack] = useState('')\n  const [tags, setTags] = useState([])\n\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  \n  function resetStates() {\n    setSelectedFiles([])\n    setDeveloperName('')\n    setProjectName('')\n    setDescription('')\n    setRepoUrl('')\n    setDemoUrl('')\n    setTags([])\n    setDocumenationUrl('')\n    setStack('')\n  }\n\n  function handleImageInput(event) {\n    const file = event.target.files[0]\n    const newSelectedFiles = [...selectedFiles,file]\n    setSelectedFiles(newSelectedFiles)\n  }\n\n//   const handleSubmitImage = async () => {\n//     if (selectedFiles.length === 0) return null;\n//     try{\n//         // const imageFile = selectedFile\n//         let images = []\n//         selectedFiles.forEach(async (imageFile)=>{\n//           const file = await imageCompression(imageFile, options)\n//           const reader = new FileReader();\n//           reader.readAsDataURL(file);\n//           reader.onloadend = async() => {\n//               // uploadImage(reader.result)\n//             images.push(reader.result)\n//           };\n//           reader.onerror = () => {\n//               console.log('some error happened')\n//           };\n//         });\n//         console.log(images)\n//         return images\n\n//        }catch(err) {\n//         console.log(err)\n//         return null\n//        }\n    \n// };\n\n  const handleSubmit = async(event) => {\n    event.preventDefault();\n    let user = {\n      developer_name: developerName,\n      project_name: projectName,\n      description: description,\n      repo_url: repoUrl,\n      demo_url: demoUrl,\n      documentation_url: documentationUrl,\n      main_stack: stack\n    }\n\n    try{\n\n        let images = []\n\n        for(let i=0;i<selectedFiles.length;i++){\n          let imageFile = selectedFiles[i]\n          const file = await imageCompression(imageFile, options)\n                   \n          const uploadFileAsText = (file)=> {\n            return new Promise((resolve,reject)=>{\n              const reader = new FileReader();\n              reader.readAsDataURL(file);\n              reader.onloadend = async() => {\n                resolve(reader.result)\n              };\n              reader.onerror = () => {\n                reject()\n              };\n            })\n          }\n\n          let res = await uploadFileAsText(file);\n          images.push(res)\n        }\n        let Tags = tags.split(' ')\n        console.log(Tags)\n        let result = await axios.post('https://code-crud.herokuapp.com/addproject',{...user,images:images,tags:Tags})\n        resetStates()\n        console.log(result)\n        alert('project added successfully')\n\n    }catch(err){\n      console.log(err)\n    }\n\n }\n\n  return(\n    <div className=\"wrapper\">\n      <h1>Input Project Data</h1>\n      <form onSubmit={handleSubmit} >\n        <fieldset>\n          <label>\n            <p>Project Name</p>\n            <input name=\"name\"  value={projectName} onChange={(evt)=>{setProjectName(evt.target.value)}}/>\n          </label>\n        </fieldset>\n        <fieldset>\n          <label>\n            <p>Project Leader</p>\n            <input name=\"leader\"  value={developerName} onChange={(evt)=>{setDeveloperName(evt.target.value)}}/>\n          </label>\n        </fieldset>\n        <fieldset>\n          <label>\n            <p>Project description</p>\n            <input name=\"description\"  value={description} onChange={(evt)=>{setDescription(evt.target.value)}}  />\n          </label>\n        </fieldset>\n        <fieldset>\n          <label>\n            <p>Image Link</p>\n            <input\n                    id=\"fileInput\"\n                    type=\"file\"\n                    name=\"image\"\n                    onChange={handleImageInput}\n                    // value={fileInputState}\n                    className=\"form-input\"\n                />\n            <input\n                    id=\"fileInput\"\n                    type=\"file\"\n                    name=\"image\"\n                    onChange={handleImageInput}\n                    // value={fileInputState}\n                    className=\"form-input\"\n                />\n                <input\n                    id=\"fileInput\"\n                    type=\"file\"\n                    name=\"image\"\n                    onChange={handleImageInput}\n                    // value={fileInputState}\n                    className=\"form-input\"\n                />\n                <input\n                    id=\"fileInput\"\n                    type=\"file\"\n                    name=\"image\"\n                    onChange={handleImageInput}\n                    // value={fileInputState}\n                    className=\"form-input\"\n                />\n                {/* {previewSource && (\n                <img\n                    src={previewSource}\n                    alt=\"chosen\"\n                    style={{ height: '300px' }}\n                />\n            )} */}\n          </label>\n        </fieldset>\n        <fieldset>\n          <label>\n            <p>Repository Link</p>\n            <input name=\"github\"  value={repoUrl} onChange={(evt)=>{setRepoUrl(evt.target.value)}}/>\n          </label>\n        </fieldset>\n        <fieldset>\n          <label>\n            <p>Demo Link</p>\n            <input name=\"demolink\"  value={demoUrl} onChange={(evt)=>{setDemoUrl(evt.target.value)}}/>\n          </label>\n        </fieldset>\n        <fieldset>\n          <label>\n            <p>Documentation</p>\n            <input name=\"documentation\"  value={documentationUrl} onChange={(evt)=>{setDocumenationUrl(evt.target.value)}} />\n          </label>\n        </fieldset>\n        <fieldset>\n          <label>\n            <p>Tech Stack</p>\n            <input name=\"tech\"  value={stack} onChange={(evt)=>{setStack(evt.target.value)}}/>\n          </label>\n        </fieldset>\n        <fieldset>\n          <label>\n            <p>Tags</p>\n            <input name=\"tags\"  value={tags} onChange={(evt)=>{setTags(evt.target.value)}}/>\n          </label>\n        </fieldset>\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  )\n}\n\nexport default Adminform;\n"]},"metadata":{},"sourceType":"module"}