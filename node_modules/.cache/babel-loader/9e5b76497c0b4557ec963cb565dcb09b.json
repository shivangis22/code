{"ast":null,"code":"import axios from \"axios\";\nconst noImageUrl = 'https://res.cloudinary.com/dxioxeyua/image/upload/v1623558704/project_ss/Transposagen-Biopharmaceuticals-SIC-Pharma-20142_news_large_zyqkzb.jpg';\nexport function GetProjects() {\n  return new Promise((resolve, reject) => {\n    axios.get('https://code-crud.herokuapp.com/').then(response => {\n      let projects = response.data.map((proj, id) => {\n        let p = {\n          demo: proj.demoUrl,\n          description: proj.description ? proj.description : 'some description',\n          documentation: proj.documentationUrl,\n          github: proj.repoUrl,\n          tags: proj.tags,\n          key: proj._id,\n          id: id,\n          leader: proj.developerName,\n          project_name: proj.projectName,\n          tech_stack: proj.mainStack,\n          pic1: proj.imgUrls[0] ? proj.imgUrls[0] : noImageUrl,\n          pic2: proj.imgUrls[1] ? proj.imgUrls[1] : noImageUrl,\n          pic3: proj.imgUrls[2] ? proj.imgUrls[2] : noImageUrl,\n          pic4: proj.imgUrls[3] ? proj.imgUrls[3] : noImageUrl\n        };\n        return p;\n      });\n      resolve(projects); //resolve(response)\n    }).catch(err => {\n      reject(err);\n    });\n  });\n}\n_c = GetProjects;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetProjects\");","map":{"version":3,"sources":["C:/Users/Shivangi/Downloads/code-newbranch/src/utils/Projects.js"],"names":["axios","noImageUrl","GetProjects","Promise","resolve","reject","get","then","response","projects","data","map","proj","id","p","demo","demoUrl","description","documentation","documentationUrl","github","repoUrl","tags","key","_id","leader","developerName","project_name","projectName","tech_stack","mainStack","pic1","imgUrls","pic2","pic3","pic4","catch","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,UAAU,GAAG,iJAAnB;AACA,OAAO,SAASC,WAAT,GAAuB;AAC5B,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAmB;AACpCL,IAAAA,KAAK,CAACM,GAAN,CAAU,kCAAV,EACGC,IADH,CACSC,QAAD,IAAY;AAChB,UAAIC,QAAQ,GAAGD,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAkB,CAACC,IAAD,EAAMC,EAAN,KAAW;AAC1C,YAAIC,CAAC,GAAG;AACNC,UAAAA,IAAI,EAAEH,IAAI,CAACI,OADL;AAENC,UAAAA,WAAW,EAAEL,IAAI,CAACK,WAAL,GAAiBL,IAAI,CAACK,WAAtB,GAAkC,kBAFzC;AAGNC,UAAAA,aAAa,EAAEN,IAAI,CAACO,gBAHd;AAINC,UAAAA,MAAM,EAAER,IAAI,CAACS,OAJP;AAKNC,UAAAA,IAAI,EAAEV,IAAI,CAACU,IALL;AAMNC,UAAAA,GAAG,EAAEX,IAAI,CAACY,GANJ;AAONX,UAAAA,EAAE,EAAEA,EAPE;AAQNY,UAAAA,MAAM,EAAEb,IAAI,CAACc,aARP;AASNC,UAAAA,YAAY,EAAEf,IAAI,CAACgB,WATb;AAUNC,UAAAA,UAAU,EAAEjB,IAAI,CAACkB,SAVX;AAWNC,UAAAA,IAAI,EAAEnB,IAAI,CAACoB,OAAL,CAAa,CAAb,IAAgBpB,IAAI,CAACoB,OAAL,CAAa,CAAb,CAAhB,GAAgC/B,UAXhC;AAYNgC,UAAAA,IAAI,EAAErB,IAAI,CAACoB,OAAL,CAAa,CAAb,IAAgBpB,IAAI,CAACoB,OAAL,CAAa,CAAb,CAAhB,GAAgC/B,UAZhC;AAaNiC,UAAAA,IAAI,EAAEtB,IAAI,CAACoB,OAAL,CAAa,CAAb,IAAgBpB,IAAI,CAACoB,OAAL,CAAa,CAAb,CAAhB,GAAgC/B,UAbhC;AAcNkC,UAAAA,IAAI,EAAEvB,IAAI,CAACoB,OAAL,CAAa,CAAb,IAAgBpB,IAAI,CAACoB,OAAL,CAAa,CAAb,CAAhB,GAAgC/B;AAdhC,SAAR;AAgBA,eAAOa,CAAP;AACD,OAlBc,CAAf;AAmBAV,MAAAA,OAAO,CAACK,QAAD,CAAP,CApBgB,CAqBhB;AACD,KAvBH,EAwBG2B,KAxBH,CAwBUC,GAAD,IAAO;AACZhC,MAAAA,MAAM,CAACgC,GAAD,CAAN;AACD,KA1BH;AA4BD,GA7BM,CAAP;AA8BD;KA/BenC,W","sourcesContent":["import axios from \"axios\";\n\nconst noImageUrl = 'https://res.cloudinary.com/dxioxeyua/image/upload/v1623558704/project_ss/Transposagen-Biopharmaceuticals-SIC-Pharma-20142_news_large_zyqkzb.jpg'\nexport function GetProjects() {\n  return new Promise((resolve, reject)=>{\n    axios.get('https://code-crud.herokuapp.com/')\n      .then((response)=>{\n        let projects = response.data.map((proj,id)=>{\n          let p = {\n            demo: proj.demoUrl,\n            description: proj.description?proj.description:'some description',\n            documentation: proj.documentationUrl,\n            github: proj.repoUrl,\n            tags: proj.tags,\n            key: proj._id,\n            id: id,\n            leader: proj.developerName,\n            project_name: proj.projectName,\n            tech_stack: proj.mainStack,\n            pic1: proj.imgUrls[0]?proj.imgUrls[0]:noImageUrl,\n            pic2: proj.imgUrls[1]?proj.imgUrls[1]:noImageUrl,\n            pic3: proj.imgUrls[2]?proj.imgUrls[2]:noImageUrl,\n            pic4: proj.imgUrls[3]?proj.imgUrls[3]:noImageUrl,\n          }\n          return p\n        })\n        resolve(projects)\n        //resolve(response)\n      })\n      .catch((err)=>{\n        reject(err)\n      })\n    \n  })\n}\n"]},"metadata":{},"sourceType":"module"}